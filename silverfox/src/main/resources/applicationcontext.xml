<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd    
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/tx    
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">  
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:mysql.properties" />
	</bean>
	
	
	
	<!-- mybatis 与spring的融合 -->
	<!-- 数据源在测试阶段可以使用springframework自带的数据源；后续可以使用几款较常用的数据库连接池，如druid，c3p0等，来支撑高并发场景下，对数据库并发连接造成的挑战。 -->
	<!-- 1.配置数据源 DriverManagerDataSource -->
	<!-- <property name="driverClassName" value="${com.wkzuche.mysql.driver}" />
		<property name="url" value="${com.wkzuche.mysql.url}" />
 		<property name="username" value="${com.wkzuche.mysql.user}" />
 		<property name="password" value="${com.wkzuche.mysql.password}" /> -->
	<bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		
 		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>  
        <property name="url" value="jdbc:mysql://localhost:3306/compare_car_price"></property>  
        <property name="username" value="root"></property>  
        <property name="password" value="root"></property>  
	</bean>
	
	<!-- 声明mybatis工厂类，SqlSesssionFactoryBean 。dataSource是mybatis引用的数据源，以及mybatis的配置文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- mybatis 配置文件 -->
		
		<property name="configLocation" value="classpath:mybatis.cfg.xml" />
		
		<!-- mybatis 实体类映射文件路径，如果只有一个文件，可以直接写死；如果有多个的话，可以使用classpath:mybatis-mapper/*.xml来替代 -->
		<!-- <property name="mapperLocations" value="classpath:mybatis-mapper/*.xml"></property> -->
	</bean>
	
	<!-- mybatis 自动扫描加载sql映射文件/接口，MapperScannerConfigurer SqlSessionFactory
		basePackage:指定的sql映射文件/接口所在的包 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wkzuche.crawler.dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="singleton">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 事务处理， DataSourceTransactionManager dataSource 引用上面定义好的数据源 -->
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />
	
</beans>